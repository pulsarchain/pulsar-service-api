<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bosha.common.server.mapper.SystemContentMapper">
    <resultMap id="BaseResultMap" type="com.bosha.common.api.entity.SystemContent">
        <!--@mbg.generated-->
        <!--@Table system_content-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="dict_id" jdbcType="BIGINT" property="dictId"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="push" jdbcType="INTEGER" property="push"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <collection property="i18ns" ofType="com.bosha.common.api.entity.SystemContentI18n" column="id"
                    select="com.bosha.common.server.mapper.SystemContentI18nMapper.list"
                    javaType="java.util.ArrayList"/>
    </resultMap>
    <resultMap id="ManagerResultMap" type="com.bosha.common.api.dto.SystemContentManagerListDto"
               extends="BaseResultMap">
        <result column="type" property="type"/>
        <result column="category" property="category"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, dict_id, title, content, `status`, push, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from system_content
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete from system_content
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.bosha.common.api.entity.SystemContent"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into system_content (dict_id, title, content,
        `status`, push, create_time,
        update_time)
        values (#{dictId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR},
        #{status,jdbcType=INTEGER}, #{push,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.bosha.common.api.entity.SystemContent" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into system_content
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="dictId != null">
                dict_id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="push != null">
                push,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="dictId != null">
                #{dictId,jdbcType=BIGINT},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="push != null">
                #{push,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bosha.common.api.entity.SystemContent">
        <!--@mbg.generated-->
        update system_content
        <set>
            <if test="dictId != null">
                dict_id = #{dictId,jdbcType=BIGINT},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
            <if test="push != null">
                push = #{push,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bosha.common.api.entity.SystemContent">
        <!--@mbg.generated-->
        update system_content
        set dict_id = #{dictId,jdbcType=BIGINT},
        title = #{title,jdbcType=VARCHAR},
        content = #{content,jdbcType=LONGVARCHAR},
        `status` = #{status,jdbcType=INTEGER},
        push = #{push,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="list" resultType="com.bosha.common.api.dto.SystemContentManagerListDto" resultMap="ManagerResultMap">
        select
        <include refid="Base_Column_List"/>,
        ifnull((select `key` from dict where id = sc.dict_id),'-') category,
        IF((ifnull((select parent_id from dict where id = sc.dict_id),0)) = 0, ifnull((select `key` from dict where id =
        sc.dict_id),'-'), ifnull( (select `key` from dict where id=((select parent_id from dict where id =
        sc.dict_id))),'-')) type
        from system_content sc
        where 1=1
        <if test="id != null">
            and sc.id = #{id}
        </if>
        <if test="title != null and title != ''">
            and sc.title like concat('%',#{title},'%')
        </if>
        <if test="createTimeStart != null and createTimeStart != '' and createTimeEnd != null and createTimeEnd != ''">
            and sc.create_time between #{createTimeStart} and #{createTimeEnd}
        </if>
        <if test="status != null">
            and sc.status = #{status}
        </if>
        <if test="dictId != null">
            and sc.dict_id = #{dictId}
        </if>
        order by sc.create_time desc
    </select>
    <select id="helpCenter" resultType="com.bosha.common.api.dto.HelpCenterCategoryDto">
        select id,
               create_time      createTime,
               ifnull((select `name` from system_content_i18n where sc_id = sc.id and language = #{language}),
                      sc.title) name
        from system_content sc
        where status = 1
          and dict_id = #{dictId}
        order by create_time desc
    </select>
    <select id="chain" resultType="com.bosha.common.api.dto.ChainCategoryDto">
        select id,
        create_time createTime,
        ifnull((select `name` from system_content_i18n where sc_id = sc.id and language = #{language}),
        sc.title) name
        from system_content sc
        where status = 1
        and dict_id = #{dictId}
        <if test="name != null and name != ''">
            and title like concat('%',#{name},'%')
        </if>
        order by create_time desc
    </select>
    <select id="instructions" resultType="com.bosha.common.api.dto.InstructionsInfoDto">
        select id ,
        ifnull((select `name` from system_content_i18n where sc_id = sc.id and language = #{language}),
        sc.title) name
        from system_content sc
        where status = 1
        and dict_id in
        <foreach collection="ids" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="countByDictId" resultType="int">
        select count(*)
        from system_content
        where dict_id = #{dictId}
    </select>
    <select id="getMiningRuleId" resultType="java.lang.Long">
        select id
        from system_content
        where dict_id = #{dictId}
        limit 1
    </select>

</mapper>