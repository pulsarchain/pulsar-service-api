<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bosha.dapp.server.mapper.SparksDonateBuyMapper">
    <resultMap id="BaseResultMap" type="com.bosha.dapp.api.entity.SparksDonateBuy">
        <!--@mbg.generated-->
        <!--@Table sparks_donate_buy-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="donate_id" jdbcType="BIGINT" property="donateId"/>
        <result column="num" jdbcType="INTEGER" property="num"/>
        <result column="notice" jdbcType="INTEGER" property="notice"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="receive_address" jdbcType="VARCHAR" property="receiveAddress"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, address, donate_id, num, notice, `name`, phone, receive_address, create_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from sparks_donate_buy
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete from sparks_donate_buy
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.bosha.dapp.api.entity.SparksDonateBuy" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sparks_donate_buy
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="address != null">
                address,
            </if>
            <if test="donateId != null">
                donate_id,
            </if>
            <if test="num != null">
                num,
            </if>
            <if test="notice != null">
                notice,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="receiveAddress != null">
                receive_address,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="donateId != null">
                #{donateId,jdbcType=BIGINT},
            </if>
            <if test="num != null">
                #{num,jdbcType=INTEGER},
            </if>
            <if test="notice != null">
                #{notice,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="receiveAddress != null">
                #{receiveAddress,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bosha.dapp.api.entity.SparksDonateBuy">
        <!--@mbg.generated-->
        update sparks_donate_buy
        <set>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="donateId != null">
                donate_id = #{donateId,jdbcType=BIGINT},
            </if>
            <if test="num != null">
                num = #{num,jdbcType=INTEGER},
            </if>
            <if test="notice != null">
                notice = #{notice,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="receiveAddress != null">
                receive_address = #{receiveAddress,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated-->
        update sparks_donate_buy
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="address = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.address != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.address,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="donate_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.donateId != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.donateId,jdbcType=BIGINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="num = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.num != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.num,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="notice = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.notice != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.notice,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`name` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.name != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.name,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="phone = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.phone != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.phone,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="receive_address = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.receiveAddress != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.receiveAddress,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.createTime != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sparks_donate_buy
        (address, donate_id, num, notice, `name`, phone, receive_address, create_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.address,jdbcType=VARCHAR}, #{item.donateId,jdbcType=BIGINT}, #{item.num,jdbcType=INTEGER},
            #{item.notice,jdbcType=INTEGER}, #{item.name,jdbcType=VARCHAR}, #{item.phone,jdbcType=VARCHAR},
            #{item.receiveAddress,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>
    <select id="count" resultType="int">
        select count(*)
        from sparks_donate_buy
        where address = #{address}
          and donate_id = #{id}
          and notice = 1
    </select>
    <update id="updateNotice">
        update sparks_donate_buy
        set notice = 1
        where address = #{address}
          and donate_id = #{id}
    </update>
    <select id="myBuy" resultType="com.bosha.dapp.api.dto.DonateListDto">
        select sd.id,
               sd.name,
               sd.address,
               sd.type,
               sd.category,
               sd.`desc`,
               sd.num,
               sd.sku,
               sd.unit,
               (select url from sparks_donate_img where donate_id = sd.id limit 1) img,
               if((select count(*)
                   from sparks_favorite sf
                   where sf.address = #{address}
                     and sf.type = 1
                     and sf.related_id = sd.id) = 0, 0, 1)                         collect
        from sparks_donate_buy sdb
                 left join sparks_donate sd on sd.id = sdb.donate_id
        where sdb.address = #{address}
        order by sdb.create_time desc
    </select>
    <select id="listByAddress" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sparks_donate_buy where address = #{address} order by create_time desc
    </select>
</mapper>