<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bosha.dapp.server.mapper.SparksDonateMapper">
    <resultMap id="BaseResultMap" type="com.bosha.dapp.api.entity.SparksDonate">
        <!--@mbg.generated-->
        <!--@Table sparks_donate-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="category" jdbcType="VARCHAR" property="category"/>
        <result column="num" jdbcType="INTEGER" property="num"/>
        <result column="sku" jdbcType="INTEGER" property="sku"/>
        <result column="unit" jdbcType="VARCHAR" property="unit"/>
        <result column="desc" jdbcType="VARCHAR" property="desc"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="cost" jdbcType="DECIMAL" property="cost"/>
        <result column="credit_score_min" jdbcType="INTEGER" property="creditScoreMin"/>
        <result column="credit_score_max" jdbcType="INTEGER" property="creditScoreMax"/>
        <result column="hash" jdbcType="VARCHAR" property="hash"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, address, `name`, `status`, category, num, sku, unit, `desc`, `type`, cost, credit_score_min,
        credit_score_max, hash, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from sparks_donate
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete from sparks_donate
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.bosha.dapp.api.entity.SparksDonate"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sparks_donate
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="address != null">
                address,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="category != null">
                category,
            </if>
            <if test="num != null">
                num,
            </if>
            <if test="sku != null">
                sku,
            </if>
            <if test="unit != null">
                unit,
            </if>
            <if test="desc != null">
                `desc`,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="cost != null">
                cost,
            </if>
            <if test="creditScoreMin != null">
                credit_score_min,
            </if>
            <if test="creditScoreMax != null">
                credit_score_max,
            </if>
            <if test="hash != null">
                hash,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="category != null">
                #{category,jdbcType=VARCHAR},
            </if>
            <if test="num != null">
                #{num,jdbcType=INTEGER},
            </if>
            <if test="sku != null">
                #{sku,jdbcType=INTEGER},
            </if>
            <if test="unit != null">
                #{unit,jdbcType=VARCHAR},
            </if>
            <if test="desc != null">
                #{desc,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="cost != null">
                #{cost,jdbcType=DECIMAL},
            </if>
            <if test="creditScoreMin != null">
                #{creditScoreMin,jdbcType=INTEGER},
            </if>
            <if test="creditScoreMax != null">
                #{creditScoreMax,jdbcType=INTEGER},
            </if>
            <if test="hash != null">
                #{hash,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bosha.dapp.api.entity.SparksDonate">
        <!--@mbg.generated-->
        update sparks_donate
        <set>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
            <if test="category != null">
                category = #{category,jdbcType=VARCHAR},
            </if>
            <if test="num != null">
                num = #{num,jdbcType=INTEGER},
            </if>
            <if test="sku != null">
                sku = #{sku,jdbcType=INTEGER},
            </if>
            <if test="unit != null">
                unit = #{unit,jdbcType=VARCHAR},
            </if>
            <if test="desc != null">
                `desc` = #{desc,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=INTEGER},
            </if>
            <if test="cost != null">
                cost = #{cost,jdbcType=DECIMAL},
            </if>
            <if test="creditScoreMin != null">
                credit_score_min = #{creditScoreMin,jdbcType=INTEGER},
            </if>
            <if test="creditScoreMax != null">
                credit_score_max = #{creditScoreMax,jdbcType=INTEGER},
            </if>
            <if test="hash != null">
                hash = #{hash,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated-->
        update sparks_donate
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="address = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.address != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.address,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`name` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.name != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.name,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`status` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.status != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="category = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.category != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.category,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="num = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.num != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.num,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="sku = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.sku != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.sku,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="unit = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.unit != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.unit,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`desc` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.desc != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.desc,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`type` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.type != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.type,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="cost = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.cost != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.cost,jdbcType=DECIMAL}
                    </if>
                </foreach>
            </trim>
            <trim prefix="credit_score_min = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.creditScoreMin != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.creditScoreMin,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="credit_score_max = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.creditScoreMax != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.creditScoreMax,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="hash = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.hash != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.hash,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.createTime != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.updateTime != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sparks_donate
        (address, `name`, `status`, category, num, sku, unit, `desc`, `type`, cost, credit_score_min,
        credit_score_max, hash, create_time, update_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.address,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, #{item.status,jdbcType=INTEGER},
            #{item.category,jdbcType=VARCHAR}, #{item.num,jdbcType=INTEGER}, #{item.sku,jdbcType=INTEGER},
            #{item.unit,jdbcType=VARCHAR}, #{item.desc,jdbcType=VARCHAR}, #{item.type,jdbcType=INTEGER},
            #{item.cost,jdbcType=DECIMAL}, #{item.creditScoreMin,jdbcType=INTEGER},
            #{item.creditScoreMax,jdbcType=INTEGER},
            #{item.hash,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>
    <select id="list" parameterType="com.bosha.dapp.api.dto.DonateQuery"
            resultType="com.bosha.dapp.api.dto.DonateListDto">
        select sd.id,sd.name,
        sd.address,
        sd.type,
        sd.category,
        sd.`desc`,
        sd.num,
        sd.sku,
        sd.unit,
        (select url from sparks_donate_img where donate_id = sd.id limit 1) img,
        if((select count(*)
        from sparks_favorite sf
        where sf.address = #{address} and sf.type = 1 and sf.related_id = sd.id) = 0, 0, 1) collect
        from sparks_donate sd
        where 1=1
        <if test="category != null and category != ''">
            and sd.category = #{category}
        </if>
        <if test="type != null">
            and sd.type = #{type}
        </if>
        <if test="startTime != null and startTime != '' and endTime != null and endTime != ''">
            and sd.create_time between #{startTime} and #{endTime}
        </if>
        <if test="free != null">
            <if test="free==1">
                and sd.cost = 0
            </if>
            <if test="free==0">
                and sd.cost &gt; 0
            </if>
        </if>
        <choose>
            <when test="success != null and success == 1">
                and sd.sku = 0
            </when>
            <otherwise>
                and sd.sku &gt; 0
            </otherwise>
        </choose>
        order by sd.create_time desc
    </select>
    <select id="my" resultType="com.bosha.dapp.api.dto.DonateListDto">
        select sd.id,sd.name,
               sd.address,
               sd.type,
               sd.category,
               sd.`desc`,
               sd.num,
               sd.sku,
               sd.unit,
               (select url from sparks_donate_img where donate_id = sd.id limit 1) img,
               if((select count(*)
                   from sparks_favorite sf
                   where sf.address = #{address}
                     and sf.type = 1
                     and sf.related_id = sd.id) = 0, 0, 1)                         collect
        from sparks_donate sd
        where sd.address = #{address}
        order by sd.create_time desc
    </select>
    <select id="myFavorite" resultType="com.bosha.dapp.api.dto.DonateListDto">
        select sd.id,sd.name,
               sd.address,
               sd.type,
               sd.category,
               sd.`desc`,
               sd.num,
               sd.sku,
               sd.unit,
               (select url from sparks_donate_img where donate_id = sd.id limit 1) img
        from sparks_favorite sf
                 left join sparks_donate sd on sd.id = sf.related_id
        where sf.address = #{address}
          and sf.type = 1
          and sd.type = 1
        order by sd.create_time desc
    </select>
</mapper>