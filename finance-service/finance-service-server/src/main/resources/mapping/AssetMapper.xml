<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bosha.finance.server.mapper.AssetMapper">
    <resultMap id="BaseResultMap" type="com.bosha.finance.api.entity.Asset">
        <!--@mbg.generated-->
        <!--@Table asset-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="balance" jdbcType="DECIMAL" property="balance"/>
        <result column="frozen_balance" jdbcType="DECIMAL" property="frozenBalance"/>
        <result column="finance_frozen_balance" jdbcType="DECIMAL" property="financeFrozenBalance"/>
        <result column="finance_balance" jdbcType="DECIMAL" property="financeBalance"/>
        <result column="coin_id" jdbcType="BIGINT" property="coinId"/>
        <result column="other" jdbcType="VARCHAR" property="other"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, user_id, address, balance, frozen_balance, finance_frozen_balance, finance_balance,
        coin_id, other
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from asset
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByCoinIdAndUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from asset
        where coin_id = #{coinId} and user_id = #{userId}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete from asset
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.bosha.finance.api.entity.Asset"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into asset (user_id, address, balance,
        frozen_balance, finance_frozen_balance, finance_balance,
        coin_id, other)
        values (#{userId,jdbcType=BIGINT}, #{address,jdbcType=VARCHAR}, #{balance,jdbcType=DECIMAL},
        #{frozenBalance,jdbcType=DECIMAL}, #{financeFrozenBalance,jdbcType=DECIMAL}, #{financeBalance,jdbcType=DECIMAL},
        #{coinId,jdbcType=BIGINT}, #{other,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.bosha.finance.api.entity.Asset"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into asset
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="balance != null">
                balance,
            </if>
            <if test="frozenBalance != null">
                frozen_balance,
            </if>
            <if test="financeFrozenBalance != null">
                finance_frozen_balance,
            </if>
            <if test="financeBalance != null">
                finance_balance,
            </if>
            <if test="coinId != null">
                coin_id,
            </if>
            <if test="other != null">
                other,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="balance != null">
                #{balance,jdbcType=DECIMAL},
            </if>
            <if test="frozenBalance != null">
                #{frozenBalance,jdbcType=DECIMAL},
            </if>
            <if test="financeFrozenBalance != null">
                #{financeFrozenBalance,jdbcType=DECIMAL},
            </if>
            <if test="financeBalance != null">
                #{financeBalance,jdbcType=DECIMAL},
            </if>
            <if test="coinId != null">
                #{coinId,jdbcType=BIGINT},
            </if>
            <if test="other != null">
                #{other,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bosha.finance.api.entity.Asset">
        <!--@mbg.generated-->
        update asset
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="balance != null">
                balance = #{balance,jdbcType=DECIMAL},
            </if>
            <if test="frozenBalance != null">
                frozen_balance = #{frozenBalance,jdbcType=DECIMAL},
            </if>
            <if test="financeFrozenBalance != null">
                finance_frozen_balance = #{financeFrozenBalance,jdbcType=DECIMAL},
            </if>
            <if test="financeBalance != null">
                finance_balance = #{financeBalance,jdbcType=DECIMAL},
            </if>
            <if test="coinId != null">
                coin_id = #{coinId,jdbcType=BIGINT},
            </if>
            <if test="other != null">
                other = #{other,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bosha.finance.api.entity.Asset">
        <!--@mbg.generated-->
        update asset
        set user_id = #{userId,jdbcType=BIGINT},
        address = #{address,jdbcType=VARCHAR},
        balance = #{balance,jdbcType=DECIMAL},
        frozen_balance = #{frozenBalance,jdbcType=DECIMAL},
        finance_frozen_balance = #{financeFrozenBalance,jdbcType=DECIMAL},
        finance_balance = #{financeBalance,jdbcType=DECIMAL},
        coin_id = #{coinId,jdbcType=BIGINT},
        other = #{other,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="addBalanceByCoinIdAndUserId">
        update asset set
        balance = balance + #{money,jdbcType=DECIMAL}
        where coin_id = #{coinId,jdbcType=BIGINT} and user_id = #{userId}
    </update>
    <update id="updateBalanceByUserIdAndCoinId">
        update asset set
        balance = balance - #{actualNumber,jdbcType=DECIMAL},
        frozen_balance = frozen_balance+ #{actualNumber,jdbcType=DECIMAL}
        where coin_id = #{coinId,jdbcType=BIGINT} and user_id = #{userId}
    </update>
    <update id="updateFrozenBalance">
        update asset set
        frozen_balance = frozen_balance -  #{actualNumber,jdbcType=DECIMAL}
        where coin_id = #{coinId,jdbcType=BIGINT} and user_id = #{userId}
    </update>
    <update id="updateFrozenBalanceAndBalance">
        update asset set
        frozen_balance = frozen_balance -  #{actualNumber,jdbcType=DECIMAL}
        balance = balance + #{number,jdbcType=DECIMAL}
        where coin_id = #{coinId,jdbcType=BIGINT} and user_id = #{userId}
    </update>

</mapper>