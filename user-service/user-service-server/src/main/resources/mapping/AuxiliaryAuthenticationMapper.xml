<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bosha.user.server.mapper.AuxiliaryAuthenticationMapper">
    <resultMap id="BaseResultMap" type="com.bosha.user.api.entity.AuxiliaryAuthentication">
        <!--@mbg.generated-->
        <!--@Table auxiliary_authentication-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="au_id" jdbcType="BIGINT" property="auId"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="auxiliary_address" jdbcType="VARCHAR" property="auxiliaryAddress"/>
        <result column="money" jdbcType="DECIMAL" property="money"/>
        <result column="hash" jdbcType="VARCHAR" property="hash"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, au_id, address, auxiliary_address, money, hash, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from auxiliary_authentication
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete from auxiliary_authentication
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.bosha.user.api.entity.AuxiliaryAuthentication" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into auxiliary_authentication
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="auId != null">
                au_id,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="auxiliaryAddress != null">
                auxiliary_address,
            </if>
            <if test="money != null">
                money,
            </if>
            <if test="hash != null">
                hash,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="auId != null">
                #{auId,jdbcType=BIGINT},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="auxiliaryAddress != null">
                #{auxiliaryAddress,jdbcType=VARCHAR},
            </if>
            <if test="money != null">
                #{money,jdbcType=DECIMAL},
            </if>
            <if test="hash != null">
                #{hash,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bosha.user.api.entity.AuxiliaryAuthentication">
        <!--@mbg.generated-->
        update auxiliary_authentication
        <set>
            <if test="auId != null">
                au_id = #{auId,jdbcType=BIGINT},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="auxiliaryAddress != null">
                auxiliary_address = #{auxiliaryAddress,jdbcType=VARCHAR},
            </if>
            <if test="money != null">
                money = #{money,jdbcType=DECIMAL},
            </if>
            <if test="hash != null">
                hash = #{hash,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bosha.user.api.entity.AuxiliaryAuthentication">
        <!--@mbg.generated-->
        update auxiliary_authentication
        set au_id = #{auId,jdbcType=BIGINT},
        address = #{address,jdbcType=VARCHAR},
        auxiliary_address = #{auxiliaryAddress,jdbcType=VARCHAR},
        money = #{money,jdbcType=DECIMAL},
        hash = #{hash,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update auxiliary_authentication
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="au_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.auId,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="address = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.address,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="auxiliary_address = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.auxiliaryAddress,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="money = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.money,jdbcType=DECIMAL}
                </foreach>
            </trim>
            <trim prefix="hash = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.hash,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into auxiliary_authentication
        (au_id, address, auxiliary_address, money, hash, create_time, update_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.auId,jdbcType=BIGINT}, #{item.address,jdbcType=VARCHAR}, #{item.auxiliaryAddress,jdbcType=VARCHAR},
            #{item.money,jdbcType=DECIMAL}, #{item.hash,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" keyColumn="id" keyProperty="id"
            parameterType="com.bosha.user.api.entity.AuxiliaryAuthentication" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into auxiliary_authentication
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            au_id,
            address,
            auxiliary_address,
            money,
            hash,
            create_time,
            update_time,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            #{auId,jdbcType=BIGINT},
            #{address,jdbcType=VARCHAR},
            #{auxiliaryAddress,jdbcType=VARCHAR},
            #{money,jdbcType=DECIMAL},
            #{hash,jdbcType=VARCHAR},
            #{createTime,jdbcType=TIMESTAMP},
            #{updateTime,jdbcType=TIMESTAMP},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            au_id = #{auId,jdbcType=BIGINT},
            address = #{address,jdbcType=VARCHAR},
            auxiliary_address = #{auxiliaryAddress,jdbcType=VARCHAR},
            money = #{money,jdbcType=DECIMAL},
            hash = #{hash,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
        </trim>
    </insert>
    <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id"
            parameterType="com.bosha.user.api.entity.AuxiliaryAuthentication" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into auxiliary_authentication
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="auId != null">
                au_id,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="auxiliaryAddress != null">
                auxiliary_address,
            </if>
            <if test="money != null">
                money,
            </if>
            <if test="hash != null">
                hash,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="auId != null">
                #{auId,jdbcType=BIGINT},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="auxiliaryAddress != null">
                #{auxiliaryAddress,jdbcType=VARCHAR},
            </if>
            <if test="money != null">
                #{money,jdbcType=DECIMAL},
            </if>
            <if test="hash != null">
                #{hash,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="auId != null">
                au_id = #{auId,jdbcType=BIGINT},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="auxiliaryAddress != null">
                auxiliary_address = #{auxiliaryAddress,jdbcType=VARCHAR},
            </if>
            <if test="money != null">
                money = #{money,jdbcType=DECIMAL},
            </if>
            <if test="hash != null">
                hash = #{hash,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="list" resultMap="BaseResultMap">
        select auxiliary_address,update_time,money from auxiliary_authentication
        where au_id = #{auId}
        and update_time is not null
    </select>
    <select id="getByAddressAndAuxiliary" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from auxiliary_authentication
        where address = #{address} and auxiliary_address = #{auxiliary}
        and money is null and update_time is null and hash is null
        limit 1
    </select>
    <select id="countIsAuxiliary" resultType="int">
        select count(id) from auxiliary_authentication
        where address = #{address} and auxiliary_address = #{auxiliary}
    </select>
    <select id="countSuccessAuxiliary" resultType="int">
        select count(id) from auxiliary_authentication
        where address = #{address}
        and money is not null
        and update_time is not null
    </select>
</mapper>